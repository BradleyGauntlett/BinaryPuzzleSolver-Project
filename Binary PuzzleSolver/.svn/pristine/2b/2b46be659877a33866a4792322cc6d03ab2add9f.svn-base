
public class ProofOfConcept_GridSolver {

	public static void main(String[] args) {

		int intGridElem[] = new int[] { 1, 0, -1 };
		int n = 4;
		int grid[][] = new int[n][n];
		int newgrid[][] = new int[n][n];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				grid[i][j] = intGridElem[(int) (Math.random() * 3)];
			}

		}

		// ============================================

		// ---------Copy Array----------

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				newgrid[i][j] = grid[i][j];
			}
		}
		// ------------------------------

		// -------------Apply Solver---------------

		for (int c = 0; c < n; c++) {
			for (int d = 0; d < n; d++) {

				if (newgrid[c][d] == -1) {
					
					for (int i = 0; i < n; i++) {
						for (int j = 0; j < n; j++) {

							// -------
							if ((i == 0)) {
								if (((grid[i][j] == -1) && (grid[i + 1][j] == 1 && grid[i + 2][j] == 1))) {
									newgrid[i][j] = 0;
								}
							}

							if (i == n) {
								if (((grid[i][j] == 1) && ((grid[i - 1][j] == 1)))){
									newgrid[i-2][j] = 0;
								}
							}

							if (j == 0) {
								if ((grid[i][j] == -1) && (grid[i][j + 1] == 1 && grid[i][j + 2] == 1)) {
									newgrid[i][j] = 0;
								}
							}

							if (j == n) {
								if (((grid[i][j] == 1) && (grid[i][j - 1] == 1))) {
									newgrid[i][j-2] = 0;
								}
							}

							/*try {

								for (int i1 = 0; i1 < n; i1++) {
									for (int j1 = 0; j1 < n; j1++) {
										if ((newgrid[i1][j1] == -1) 
												&& (newgrid[i1 - 1][j1] == 1 && newgrid[i1 - 2][j1] == 1)) {
											newgrid[i1][j1] = 0;
										}
									}
								}

							} catch (Exception ArrayIndexOutOfBoundsException) {

							}*/

							try {
								if ((((newgrid[i][j] == -1) && ((grid[i - 1][j] == 1) && (grid[i + 1][j] == 1))))) {
									newgrid[i][j] = 0;
								}

								if ((((newgrid[i][j] == -1) && ((grid[i][j - 1] == 1) && (grid[i][j + 1] == 1))))) {
									newgrid[i][j] = 0;
								}

							} catch (Exception ArrayIndexOutOfBoundsException) {

							}

							// =====================================================================================
						}
					}

				}
			}
		}

		// ------------------------------------------

		// ============================================================
		System.out.println();

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {

				if (grid[i][j] == -1) {
					System.out.print("[ ]");
				} else {
					System.out.print("[" + grid[i][j] + "]");
				}
			}
			System.out.println();
		}

		System.out.println();
		// ----------__Display--------------------------------
		System.out.println("new grid");
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {

				if (newgrid[i][j] == -1) {
					System.out.print("[ ]");
				} else {
					System.out.print("[" + newgrid[i][j] + "]");
				}
			}
			System.out.println();
		}
		// =========================================================

	}

}
