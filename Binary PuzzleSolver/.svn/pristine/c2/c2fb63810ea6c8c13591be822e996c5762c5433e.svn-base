import java.awt.Color;

public class Model {
	private boolean complete = false;
	private boolean triplematch;
	int n = 4;

	public void checkGrid(GameButton[][] grid) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {

				// -------F
				if ((i == 0 && triplematch == false)) {
					if ((grid[i][j].valState == grid[i + 1][j].valState
							&& grid[i][j].valState == grid[i + 2][j].valState)) {
						triplematch = true;
					}
				}

				if (i == n && triplematch == false) {
					if ((grid[i][j].valState == grid[i - 1][j].valState
							&& grid[i][j].valState == grid[i - 2][j].valState)) {
						triplematch = true;
					}
				}
				if (j == 0 && triplematch == false) {
					if ((grid[i][j].valState == grid[i][j + 1].valState
							&& grid[i][j].valState == grid[i][j + 2].valState)) {
						triplematch = true;
					}
				}
				if (j == n && triplematch == false) {
					if ((grid[i][j].valState == grid[i][j - 1].valState
							&& grid[i][j].valState == grid[i][j - 2].valState)) {
						triplematch = true;

					}
				}

				try {
					if (((grid[i][j].valState == grid[i - 1][j].valState)
							&& (grid[i][j].valState == grid[i + 1][j].valState)) && triplematch == false) {
						triplematch = true;
					}

					if (((grid[i][j].valState == grid[i][j - 1].valState)
							&& (grid[i][j].valState == grid[i][j + 1].valState)) && triplematch == false) {
						triplematch = true;
					}

				} catch (Exception ArrayIndexOutOfBoundsException) {

				}

				// =====================================================================================

			}
		}

		if (triplematch == true)

		{
			System.out.println("Incomplete");

		} else if (triplematch == false) {
			System.out.println("Complete");
		}
	}
}
