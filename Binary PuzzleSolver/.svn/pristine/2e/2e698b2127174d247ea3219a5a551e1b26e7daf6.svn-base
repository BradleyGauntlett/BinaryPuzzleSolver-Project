import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * 
 * @author Bradley Gauntlett
 *
 */
public class Controller {
	private View view;
	private Model model;
	private static Controller instance = new Controller();

	private Controller() {

		model = Model.getInstance();
		view = new View();
		view.addClearButtonListener(new ClearListener());
		view.addCheckListener(new CheckListener());

	}

	/**
	 * 
	 * @return instance of Controller
	 */
	public static Controller getInstance() {
		return instance;
	}

	/**
	 * 
	 * @author Bradley Gauntlett
	 *
	 */
	class ClearListener implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent e) {
			for (int i = 0; i < model.n; i++) {
				for (int j = 0; j < model.n; j++) {
					view.gameElements[i][j].elementState = 0;
					view.gameElements[i][j].valState = 0;
					view.gameElements[i][j].setText("");
					view.gameElements[i][j].setBackground(Color.BLACK);
					view.controlPanel.setBackground(Color.BLACK);

				}
			}
		}

	}

	// -------------------------------
	/**
	 * 
	 * @author Bradley Gauntlett
	 *
	 */
	class CheckListener implements ActionListener {
		Color lg = new Color(216, 255, 228);

		@Override
		public void actionPerformed(ActionEvent e) {
			model.checkGrid(view.gameElements);

			for (int i = 0; i < model.n; i++) {
				for (int j = 0; j < model.n; j++) {
					if (model.triplematch == true) {
						view.gameElements[i][j].setBackground(Color.red);
						view.gameElements[i][j].setForeground(Color.BLACK);
						view.controlPanel.setBackground(Color.RED);
					} else {
						view.gameElements[i][j].setBackground(lg);
						view.gameElements[i][j].setForeground(Color.BLACK);
						view.controlPanel.setBackground(lg);

					}

				}
			}

		}
	}
}
// ---------------------------------
